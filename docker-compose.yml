version: "3.7"

services:
  postgres:
    image: postgres:11.7-alpine
    restart: always
    volumes:
      - ./backend/scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: cp_helper
      POSTGRES_DB: cp_helper
      POSTGRES_USER: cp_helper       
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U cp_helper"]
      interval: 10s
      timeout: 5s
      retries: 5

  cp-helper-backend:
    build:
      dockerfile: Dockerfile
      context: ./backend
    depends_on:
      - postgres
    restart: always
    ports:
      - "9999:9999"

  cp-helper-frontend:
    build:
      dockerfile: Dockerfile
      context: ./frontend
    restart: always
    ports:
      - "3000:3000"
    links:
      - cp-helper-backend

  zoo:
    image: zookeeper:3.4.9
    hostname: zoo
    container_name: zoo
    ports:
      - "2181:2181"
    environment:
        ZOO_MY_ID: 1
        ZOO_PORT: 2181
        ZOO_SERVERS: server.1=zoo:2888:3888
    depends_on:
      - postgres

  kafka:
    image: confluentinc/cp-kafka:5.4.1
    hostname: kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zoo

